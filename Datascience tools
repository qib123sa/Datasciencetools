{
  "metadata": {
    "language_info": {
      "codemirror_mode": {
        "name": "python",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.8"
    },
    "kernelspec": {
      "name": "python",
      "display_name": "Python (Pyodide)",
      "language": "python"
    }
  },
  "nbformat_minor": 4,
  "nbformat": 4,
  "cells": [
    {
      "cell_type": "code",
      "source": "# Notebook Title\n",
      "metadata": {
        "trusted": true
      },
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": "## Introduction\n\nWelcome to this notebook In this document we will explore [\"hello this is my notebook\"] \nFeel free to follow along and run the code cells to gain insights into [\"Data science\"]\n\nLets get started",
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": "## Data Science Languages\n\nIn the field of data science, various programming languages are commonly used. Here are some prominent ones:\n\n1. **Python**: Widely used for its versatility, extensive libraries (such as NumPy, Pandas, and scikit-learn), and readability.\n\n2. **R**: Known for its statistical computing capabilities and a vast ecosystem of packages for data analysis and visualization.\n\n3. **SQL**: Essential for working with relational databases and handling structured data.\n\n4. **Julia**: Gaining popularity for its speed and performance in numerical and scientific computing.\n\nFeel free to explore these languages based on your specific data science tasks and preferences!\n",
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": "## Data Science Libraries\n\nIn data science, various libraries provide powerful tools and functionalities. Here are some commonly used ones:\n\n- **NumPy**: Fundamental package for scientific computing with Python.\n  \n- **Pandas**: Data manipulation and analysis library, providing data structures like DataFrame.\n\n- **Matplotlib**: 2D plotting library for creating static, animated, and interactive visualizations in Python.\n\n- **Seaborn**: Statistical data visualization based on Matplotlib, providing an attractive and informative statistical graphics.\n\n- **Scikit-learn**: Simple and efficient tools for data mining and data analysis. It includes various machine learning algorithms.\n\n- **TensorFlow**: Open-source machine learning framework developed by Google for building and training machine learning models.\n\n- **Keras**: High-level neural networks API, written in Python and capable of running on top of TensorFlow and other frameworks.\n\nFeel free to explore these libraries based on your data analysis and machine learning needs!\n",
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": "## Data Science Tools\n\n| Tool         | Description                                              |\n|--------------|----------------------------------------------------------|\n| **Jupyter**   | Interactive computing and data analysis using notebooks. |\n| **RStudio**   | Integrated development environment for R programming.    |\n| **Python**    | General-purpose programming language widely used in data science. |\n| **TensorBoard** | Web-based tool provided with TensorFlow for visualizing machine learning models. |\n| **Tableau**   | Data visualization and business intelligence tool.        |\n| **Git**       | Version control system for tracking changes in code and collaboration. |\n| **Docker**    | Platform for developing, shipping, and running applications in containers. |\n| **VS Code**   | Source code editor with built-in support for extensions and Git. |\n\nFeel free to explore these tools based on your data science and development requirements!\n",
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": "## Arithmetic Expressions\n\nArithmetic expressions involve mathematical operations such as addition, subtraction, multiplication, and division. Below are some examples of arithmetic expressions:\n\n### Addition\n```python\n# Example: Adding two numbers\nresult = 5 + 3\nprint(result)  # Output: 8\n",
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": "# Example: Subtracting one number from another\nresult = 10 - 4\nprint(result)  # Output: 6\n",
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": "# Example: Multiplying two numbers\nresult = 6 * 7\nprint(result)  # Output: 42\n",
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": "# Example: Dividing one number by another\nresult = 15 / 3\nprint(result)  # Output: 5.0\n",
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": "\nTo use this Markdown cell in a Jupyter Notebook:\n\n1. Click on a cell to select it.\n2. Change the cell type to Markdown (select \"Markdown\" from the cell type dropdown in the toolbar or use the keyboard shortcut `Esc` to enter command mode, then press `M`).\n3. Paste the provided Markdown content into the cell.\n4. Run the cell (either by clicking the \"Run\" button or using the keyboard shortcut `Shift + Enter`).\n",
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": "# Multiplication\nnum1 = 5\nnum2 = 3\nresult_multiply = num1 * num2\n\n# Addition\nnum3 = 10\nnum4 = 7\nresult_add = num3 + num4\n\n# Display the results\nresult_multiply, result_add\n",
      "metadata": {
        "trusted": true
      },
      "execution_count": 22,
      "outputs": [
        {
          "execution_count": 22,
          "output_type": "execute_result",
          "data": {
            "text/plain": "(15, 17)"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": "# Convert minutes to hours\nminutes = 120\nhours = minutes / 60\n\n# Display the result\nhours\n",
      "metadata": {
        "trusted": true
      },
      "execution_count": 23,
      "outputs": [
        {
          "execution_count": 23,
          "output_type": "execute_result",
          "data": {
            "text/plain": "2.0"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": "## Objectives\n\nIn this notebook, we aim to:\n\n1. **Explore Basic Arithmetic**: Understand and practice basic arithmetic operations such as addition, subtraction, multiplication, and division.\n\n2. **Introduce Code Examples**: Provide code examples to demonstrate how to perform arithmetic operations in Python.\n\n3. **Learn Conversion**: Explore the conversion of units, such as converting minutes to hours.\n\n4. **Practice Markdown Usage**: Familiarize ourselves with creating well-formatted text using Markdown cells.\n\nFeel free to refer to these objectives as you progress through the notebook. Let's get started!\n",
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": "## Author\n\nThis notebook was authored by [MUHAMMAD SAQIB]. Feel free to reach out if you have any questions or suggestions.\n\nHappy coding!\n",
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": "",
      "metadata": {},
      "execution_count": null,
      "outputs": []
    }
  ]
}